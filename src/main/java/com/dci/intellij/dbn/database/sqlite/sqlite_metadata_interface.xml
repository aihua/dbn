<!DOCTYPE data-dictionary [
        <!ELEMENT data-dictionary (statement-execution-processor)*>
        <!ELEMENT statement-execution-processor (statement)*>
        <!ATTLIST statement-execution-processor
                id CDATA #REQUIRED
                is-query CDATA #IMPLIED
                is-prepared-statement CDATA #IMPLIED
                timeout CDATA #IMPLIED>
        <!ELEMENT statement (#PCDATA)>
        ]>
<data-dictionary>
    <statement-execution-processor id="schemas" is-query="true">
        <statement>
            pragma database_list
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="users" is-query="true">
        <statement>
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="tables" is-query="true">
        <statement>
            select
                NAME as TABLE_NAME,
                'N' as IS_TEMPORARY
            from "{0}".SQLITE_MASTER
            where
                TYPE = 'table'
            order by TABLE_NAME asc
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="views" is-query="true">
        <statement>
            select
                NAME as VIEW_NAME,
                null as VIEW_TYPE_OWNER,
                null as VIEW_TYPE,
                'N' as IS_SYSTEM_VIEW
            from "{0}".SQLITE_MASTER
            where
                TYPE = 'view'
            order by VIEW_NAME asc
        </statement>
    </statement-execution-processor>
    <statement-execution-processor id="dataset-names" is-query="true">
        <statement>
            select
                NAME as DATASET_NAME
            from "{0}".SQLITE_MASTER
            where
                TYPE = 'table' or
                TYPE = 'view'
            order by DATASET_NAME asc
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="dataset-columns" is-query="true">
        <statement>
            PRAGMA "{0}".TABLE_INFO("{1}")
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="constraints" is-query="true">
        <statement>
            PRAGMA "{0}".INDEX_LIST("{1}")
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="foreign-key-constraints" is-query="true">
        <statement>
            PRAGMA "{0}".FOREIGN_KEY_LIST("{1}")
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="indexes" is-query="true">
        <statement>
            PRAGMA "{0}".INDEX_LIST("{1}")
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="index-info" is-query="true">
        <statement>
            PRAGMA "{0}".INDEX_XINFO("{1}")
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="dataset-triggers" is-query="true">
        <statement>
            select NAME as TRIGGER_NAME,
                   TBL_NAME as DATASET_NAME,
                   '' as TRIGGER_TYPE,
                   '' as TRIGGERING_EVENT,
                   'Y' as IS_ENABLED,
                   'Y' as IS_VALID,
                   'N' as IS_DEBUG,
                   'Y' as IS_FOR_EACH_ROW,
                   SQL as SOURCE_CODE
              from "{0}".SQLITE_MASTER
             where TYPE = 'trigger'
               and TBL_NAME = '{1}'
             order by TRIGGER_NAME asc
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="all-dataset-triggers" is-query="true">
        <statement>
            select NAME as TRIGGER_NAME,
                   TBL_NAME as DATASET_NAME,
                   '' as TRIGGER_TYPE,
                   '' as TRIGGERING_EVENT,
                   'Y' as IS_ENABLED,
                   'Y' as IS_VALID,
                   'N' as IS_DEBUG,
                   'Y' as IS_FOR_EACH_ROW,
                    SQL as SOURCE_CODE
              from "{0}".SQLITE_MASTER
             where TYPE = 'trigger'
             order by TRIGGER_NAME asc
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="view-source-code" is-query="true">
        <statement>
            select SQL as SOURCE_CODE
              from "{0}".SQLITE_MASTER
             where TYPE = 'view'
               and NAME = '{1}'
        </statement>
    </statement-execution-processor>
    <statement-execution-processor id="dataset-trigger-source-code" is-query="true">
        <statement>
            select SQL as SOURCE_CODE
              from "{0}".SQLITE_MASTER
             where TYPE = 'trigger'
               and TBL_NAME = '{1}'
               and NAME = '{2}'
        </statement>
    </statement-execution-processor>

    <statement-execution-processor id="drop-object-if-exists">
        <statement>drop {0} if exists "{1}"."{2}"</statement>
    </statement-execution-processor>

    <statement-execution-processor id="load-distinct-values" is-query="true">
        <statement>
            select distinct {2} from "{0}"."{1}" where "{2}" is not null order by "{2}"
        </statement>
    </statement-execution-processor>    

    <statement-execution-processor id="validate-connection" timeout="5">
        <statement>
            select 1
        </statement>
    </statement-execution-processor>

</data-dictionary>
